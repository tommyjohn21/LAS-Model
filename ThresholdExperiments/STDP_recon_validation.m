%%% You just introduced the PlasticityExperiment/Reconstruct technique to
%%% lay the groundwork to detect threshold via Simulation for arbitrary combinations of PCA vectors (e.g. [c1;
%%% c2]). However, prior to running that experiment, you want to make sure
%%% that the threshold detected for KNOWN combinations reproduces that
%%% measured for their associated dW matrices. Here, you Reconstruct KNOWN
%%% PCA-component combinations (with only the first two components), and
%%% you want to compare the thresholds of these Reconstructed dW matrices
%%% to those determined for N = 100 randomnly chosen matrices in STDP_1.

%% Load data from PlasticityExperiment
% Updated variable directory for PlasticityExperiments
PlasticityVarDir = 'PlasticityExperiment';

% Directory for specific experiment
PlasticityExpName = 'naive';

% Generate container for PlasticityExperiment
PE = PlasticityExperiment(PlasticityExpName);

% Update PlasticityExperiment
PE.UpdateDir(PlasticityVarDir);

% Load PlasticityExperiment
Load(PE)

% Parsing runs PCA on data to produce appropriate PCA-space coordinates
Parse(PE)
%% List of 100 updated weigthing matrices generated by PlasticityExperiment naive.mlx

% Select 100 of the matrices generated by PlasticityExperiment naive.mlx
%%% These are the same matrices given in the ThresholdExperiment/STDP_1.m
%%% script
key = [ 4    32    53    95   130   146   166   186   208   218   250   270   288   306   332   365   404   426   440   480
       18    34    65    98   132   153   167   188   209   220   261   272   293   310   337   366   409   428   447   482
       20    43    81   101   135   158   168   198   211   221   262   274   299   312   342   373   417   433   452   490
       21    47    87   119   136   160   173   204   213   223   264   279   301   323   352   381   420   434   457   493
       24    51    94   125   142   161   179   205   215   229   266   283   305   324   354   402   422   436   463   495];

% Pick a subset of these weigthing matrices for your run through
m = 25;
key = key(1:m); 

%% Give starting index and increment to run on 2 nodes (if needed)
start = 1;
increment = 1;

%% Cycle through ThresholdExperiments for Reconstructed weighting matrices given in key

for i = start:increment:numel(key)

    % Choose particular weighting matrix from key
    n = key(i);
    fprintf(['Loop %i, dW matrix %i\n'],i,key(i)) % For logging purposes on server

    %%% ThresholdExperiment preliminaries
    % Directories for saving
    VarDir = 'ThresholdExperiment/STDP_recon_validation'; % Updated variable directory for ThresholdExperiments
    
    % Directory for specific experiment
    ExpName = sprintf([PlasticityVarDir '-' PlasticityExpName '-%d'],n);

    % Generate container for ThresholdExperiment
    E = ThresholdExperiment(ExpName); % Create/update ThresholdExperiment
    E.UpdateDir(VarDir);

    % Update ThresholdExperiment settings
    E.param.inputs.levels = 5:2.5:20; % Adjust tested input levels as desired

    %%% Simulation preliminaries
    % Generate container for Simulation
    S = Simulation('DefaultSimulationParameters');

    % Generate your reconstructed matrix
    s = PE.Coord(n).'; % Retrieve first three PCA components of dW_n
    s = s(1:2); % Use only the first two components
    S.param.dW = PE.Reconstruct(s); % Reconstruct the dW matrix

    % Prepare Simulation
    Prepare(S);

    % Link ThresholdExperiment to Simulation
    E.S = S;
    
    %%% Run ThresholdExperiment
    Run(E)

end